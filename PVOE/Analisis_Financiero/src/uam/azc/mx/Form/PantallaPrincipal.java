/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uam.azc.mx.Form;

import java.util.ArrayList;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import uam.azc.mx.Datos.Gasto;
import uam.azc.mx.Datos.Moneda;
import uam.azc.mx.Datos.Periodo;
import uam.azc.mx.Datos.TipoCambio;
import uam.azc.mx.Operaciones.Conversiones;
import uam.azc.mx.Operaciones.Operaciones;


/**
 *
 * @author davidramirez
 */
public class PantallaPrincipal extends javax.swing.JFrame {

    Conversiones convert = new Conversiones();
    Operaciones ops = new Operaciones();
    ArrayList<Gasto> listaGastos = ops.registrarGastos("gastos.txt");
    ArrayList <Moneda> listaMonedas = ops.registrarMonedas("monedas.txt");
    LinkedList<Periodo> listaRegistro = ops.registrarPeriodo("periodos.txt");
    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        
        initComponents();
        cmboxMoneda.removeAllItems();
        cmboxPeriodo.removeAllItems();
        cmboxConversion.removeAllItems();
        
        txtGastoMaximo.setEditable(false);
        txtGastoMinimo.setEditable(false);
        txtGastoPromedio.setEditable(false);
        
        txtGastoMaximo.setFocusable(false);
        txtGastoMinimo.setFocusable(false);
        txtGastoPromedio.setFocusable(false);
      
        llenarMonedas();
        llenarPeriodos();
        llenarConversiones();
        
 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmboxMoneda = new javax.swing.JComboBox<>();
        cmboxPeriodo = new javax.swing.JComboBox<>();
        cmboxConversion = new javax.swing.JComboBox<>();
        txtGastoMinimo = new javax.swing.JTextField();
        txtGastoMaximo = new javax.swing.JTextField();
        txtGastoPromedio = new javax.swing.JTextField();
        txtSeleccionaConversion = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmboxMoneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxMonedaActionPerformed(evt);
            }
        });

        cmboxPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxPeriodoActionPerformed(evt);
            }
        });

        cmboxConversion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboxConversionActionPerformed(evt);
            }
        });

        txtGastoMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGastoMinimoActionPerformed(evt);
            }
        });

        txtGastoMaximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGastoMaximoActionPerformed(evt);
            }
        });

        txtSeleccionaConversion.setText("Selecciona Conversión");

        jLabel1.setText("Mínimo");

        jLabel2.setText("Máximo");

        jLabel3.setText("Promedio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmboxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(cmboxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtGastoMinimo)
                                .addComponent(txtGastoMaximo)
                                .addComponent(txtGastoPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(cmboxConversion, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(txtSeleccionaConversion)
                                .addGap(77, 77, 77))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmboxMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmboxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGastoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(1, 1, 1)
                        .addComponent(txtGastoMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(txtSeleccionaConversion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmboxConversion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGastoPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(215, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmboxMonedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboxMonedaActionPerformed

        Moneda mAux = (Moneda) cmboxMoneda.getSelectedItem();
        Periodo aux = (Periodo) cmboxPeriodo.getSelectedItem();
        
        if (aux == null) {
            System.err.println("Error: No hay ningún período seleccionado.");
            return;
        }

        if (mAux == null) {
            System.err.println("Error: No hay ninguna moneda seleccionada.");
            return;
        }
        cmboxConversion.setSelectedItem(mAux);
        String clavePeriodo = aux.getClavePeriodo();
        String claveMoneda = mAux.getClaveMoneda();
        String minimo = String.valueOf(ops.obtenerMinimo(listaGastos, clavePeriodo, claveMoneda));
        txtGastoMinimo.setText(minimo + " (" + mAux.getClaveMoneda() + ")"); 
        String maximo = String.valueOf(ops.obtenerMaximo(listaGastos, clavePeriodo, claveMoneda));
        txtGastoMaximo.setText(maximo + " (" + mAux.getClaveMoneda() + ")");
        String promedio = String.valueOf(ops.obtenerPromedio(listaGastos, clavePeriodo, claveMoneda));
        txtGastoPromedio.setText(promedio + " (" + mAux.getClaveMoneda() + ")");
        
    }//GEN-LAST:event_cmboxMonedaActionPerformed

    private void txtGastoMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGastoMinimoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGastoMinimoActionPerformed

    private void txtGastoMaximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGastoMaximoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGastoMaximoActionPerformed

    private void cmboxPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboxPeriodoActionPerformed
        Moneda mAux = (Moneda) cmboxMoneda.getSelectedItem();
        Periodo aux = (Periodo) cmboxPeriodo.getSelectedItem();
        
        if (aux == null) {
            System.err.println("Error: No hay ningún período seleccionado.");
            return;
        }

        if (mAux == null) {
            System.err.println("Error: No hay ninguna moneda seleccionada.");
            return;
        }
        
        String clavePeriodo = aux.getClavePeriodo();
        String claveMoneda = mAux.getClaveMoneda();
        String minimo = String.valueOf(ops.obtenerMinimo(listaGastos, clavePeriodo, claveMoneda));
        txtGastoMinimo.setText(minimo + " (" + mAux.getClaveMoneda() + ")");
        String maximo = String.valueOf(ops.obtenerMaximo(listaGastos, clavePeriodo, claveMoneda));
        txtGastoMaximo.setText(maximo + " (" + mAux.getClaveMoneda() + ")");
        String promedio = String.valueOf(ops.obtenerPromedio(listaGastos, clavePeriodo, claveMoneda));
        txtGastoPromedio.setText(promedio + " (" + mAux.getClaveMoneda() + ")");

    }//GEN-LAST:event_cmboxPeriodoActionPerformed

    private void cmboxConversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboxConversionActionPerformed

            // Aquí se obtiene la moneda de origen, la de destino y la cantidad
        Moneda divisaOrigen = (Moneda) cmboxMoneda.getSelectedItem();
        Periodo periodoOrigen = (Periodo) cmboxPeriodo.getSelectedItem();
        TipoCambio tipoCambioSeleccionado = (TipoCambio) cmboxConversion.getSelectedItem();

        if (divisaOrigen == null || periodoOrigen == null || tipoCambioSeleccionado == null) {
            System.err.println("Error: No hay elementos completos para realizar la conversión.");
            return;
        }
        
        if ("No realizar conversion".equals(tipoCambioSeleccionado.getTexto())) {
        
            double cantidadPromedio = ops.obtenerPromedio(listaGastos, periodoOrigen.getClavePeriodo(), divisaOrigen.getClaveMoneda());
            txtGastoPromedio.setText(String.format("%.2f", cantidadPromedio) + " (" + divisaOrigen.getClaveMoneda() + ")");
            
            double cantidadMinima = ops.obtenerMinimo(listaGastos, periodoOrigen.getClavePeriodo(), divisaOrigen.getClaveMoneda());
            txtGastoMinimo.setText(String.format("%.2f", cantidadMinima) + " (" + divisaOrigen.getClaveMoneda() + ")");
            
            double cantidadMaxima = ops.obtenerMaximo(listaGastos, periodoOrigen.getClavePeriodo(), divisaOrigen.getClaveMoneda());
            txtGastoMaximo.setText(String.format("%.2f", cantidadMaxima) + " (" + divisaOrigen.getClaveMoneda() + ")");
            
        } else {
        
                // Realizar la conversión utilizando la clase Conversiones
            double cantidadPromedio = ops.obtenerPromedio(listaGastos, periodoOrigen.getClavePeriodo(), divisaOrigen.getClaveMoneda());
            double cantidadMinima = ops.obtenerMinimo(listaGastos, periodoOrigen.getClavePeriodo(), divisaOrigen.getClaveMoneda());
            double cantidadMaxima = ops.obtenerMaximo(listaGastos, periodoOrigen.getClavePeriodo(), divisaOrigen.getClaveMoneda());

            double resultadoPromedio = convert.convertir(divisaOrigen.getClaveMoneda(), cantidadPromedio);
            double resultadoMinimo = convert.convertir(divisaOrigen.getClaveMoneda(), cantidadMinima);
            double resultadoMaximo = convert.convertir(divisaOrigen.getClaveMoneda(), cantidadMaxima);

            // Mostrar el resultado de la conversión en el campo correspondiente
            txtGastoPromedio.setText(String.format("%.2f", resultadoPromedio) + " (" + tipoCambioSeleccionado.getClave() + ")");
            txtGastoMinimo.setText(String.format("%.2f", resultadoMinimo) + " (" + tipoCambioSeleccionado.getClave() + ")");
            txtGastoMaximo.setText(String.format("%.2f", resultadoMaximo) + " (" + tipoCambioSeleccionado.getClave() + ")");
            
        }

        
        
    }//GEN-LAST:event_cmboxConversionActionPerformed

    private void llenarMonedas(){
        for (Moneda moneda : listaMonedas) {
            cmboxMoneda.addItem(moneda);
        }
    }
    
    private void llenarPeriodos(){
        for (Periodo periodo : listaRegistro) {
            cmboxPeriodo.addItem(periodo);
        }
    }
    
    private void llenarConversiones(){
        TipoCambio noConversion = new TipoCambio(null, "No realizar conversion",  1);
        TipoCambio USD = new TipoCambio("USD", "Dolar Estadounidense",  1);
        cmboxConversion.addItem(noConversion);
        cmboxConversion.addItem(USD);
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<TipoCambio> cmboxConversion;
    private javax.swing.JComboBox<Moneda> cmboxMoneda;
    private javax.swing.JComboBox<Periodo> cmboxPeriodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtGastoMaximo;
    private javax.swing.JTextField txtGastoMinimo;
    private javax.swing.JTextField txtGastoPromedio;
    private javax.swing.JLabel txtSeleccionaConversion;
    // End of variables declaration//GEN-END:variables
}
